[project]
name = "mcp-multilspy"
version = "0.1.0"
description = "MCP server that exposes Language Server Protocol functionality via multilspy"
readme = "README.md"
authors = [
    { name = "Asim Ihsan" }
]
requires-python = ">=3.12"
dependencies = [
    "mcp[cli]>=1.4.1",
    "multilspy>=0.0.14",
]


[project.scripts]
mcp-multilspy = "mcp_multilspy:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
dev-dependencies = [
    "coverage>=7.6.1",
    "maturin>=1.8.2",
    "pyright>=1.1.392.post0",
    "pytest-cov>=5.0.0",
    "pytest>=8.3.4",
    "ruff-lsp>=0.0.60",
    "ruff>=0.9.2",
]

[tool.pytest.ini_options]
addopts = "-v"
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"

[tool.ruff]
target-version = "py311"
exclude = [".git", ".venv", "__pycache__", "build", "dist"]
src = ["src"]
line-length = 100

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "F",  # pyflakes
    "I",  # isort
    "B",  # bugbear
    "N",  # naming
    "D",  # docstrings
    "UP",  # pyupgrade
]
ignore = [
    "D100",  # Missing docstring in public module
    "D101",  # Missing docstring in public class
    "D102",  # Missing docstring in public method
    "D103",  # Missing docstring in public function
    "D104",  # Missing docstring in public package
    "D105",  # Missing docstring in magic method
    "D107",  # Missing docstring in __init__
    "D203",  # Disable blank line requirement before class docstring
    "D213"   # Disable multi-line summary on the second line
]

[tool.ruff.lint.pydocstyle]
convention = "pep257"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.pyright]
include = ["src/mcp_multilspy"]
typeCheckingMode = "basic"
strictParameterNoneValue = true
reportMissingTypeStubs = true
reportUnknownMemberType = true
pythonVersion = "3.11"
extraPaths = ["src"]
venv = ".venv"

[tool.coverage.run]
source = ["test_e2e"]
branch = true

[tool.coverage.report]
show_missing = true
